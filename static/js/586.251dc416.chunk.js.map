{"version":3,"file":"static/js/586.251dc416.chunk.js","mappings":"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","sources":["components/DiaryAddProductForm/DiaryFormValidation/DiaryFormValidation.jsx","components/InputField/InputField.styled.jsx","components/InputField/InputField.jsx","pages/RegistrationPage/Registration.styled.jsx","pages/RegistrationPage/RegistrationPage.jsx","utils/noop.js"],"sourcesContent":["import { FormErrorMessage } from '@chakra-ui/react';\n\nimport React from 'react';\n\nexport default function DiaryFormValidation({ text }) {\n  return (\n    <FormErrorMessage\n      fontSize=\"8px\"\n      m=\"0\"\n      position=\"absolute\"\n      top={{ xs: '50px', md: '70px' }}\n    >\n      {text}\n    </FormErrorMessage>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FormLabel = styled.label`\n  display: block;\n  position: relative;\n  height: 46px;\n\n  &:focus-within span {\n    bottom: 25px;\n\n    font-size: 12px;\n    color: #fc842d;\n\n    @media screen and (min-width: 768px) {\n      bottom: 32px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    height: 60px;\n  }\n`;\n\nexport const LabelName = styled.span`\n  position: absolute;\n  bottom: 8px;\n\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n\n  transition: bottom 300ms ease, color 300ms ease, font-size 300ms ease;\n  z-index: 10;\n  @media screen and (min-width: 768px) {\n    bottom: 20px;\n  }\n`;\n\nexport const Input = styled.input`\n  position: absolute;\n  bottom: 0;\n\n  width: 100%;\n  /* padding-bottom: 0px; */\n\n  letter-spacing: 0.04em;\n\n  border-bottom: 1px solid #e0e0e0;\n\n  transition: border-color 300ms ease;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 5px;\n  }\n\n  &:focus-within {\n    border-bottom: 1px solid #fc842d;\n    outline: none;\n  }\n\n  &:not(:placeholder-shown) {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &:not(:placeholder-shown) ~ span {\n    bottom: 25px;\n    color: #fc842d;\n\n    font-size: 12px;\n    @media screen and (min-width: 768px) {\n      bottom: 32px;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FormLabel, LabelName, Input } from './InputField.styled';\n\nexport default function InputField({\n  labelName,\n  handlerEvent,\n  width,\n  right,\n  ...inputSetting\n}) {\n  return (\n    <>\n      <FormLabel style={(width = { width })}>\n        <Input onChange={handlerEvent} {...inputSetting} placeholder=\" \" />\n        <LabelName style={{ right: right }}>{labelName}</LabelName>\n      </FormLabel>\n    </>\n  );\n}\n\nInputField.propTypes = {\n  labelName: PropTypes.string,\n  handlerEvent: PropTypes.func.isRequired,\n  width: PropTypes.string,\n  right: PropTypes.number,\n};\n","import styled from '@emotion/styled';\nimport desktopMainBg from '../../assets/bg/desktopMainBg.png';\nimport tabletMainBg from '../../assets/bg/tabletMainBg.png';\n\nexport const BgImg = styled.div`\n  @media screen and (min-width: 768px) {\n    position: fixed;\n    top: 0;\n    right: 0;\n    z-index: -1;\n\n    width: 100vw;\n    height: 100vh;\n\n    background-image: url(${tabletMainBg});\n    background-repeat: no-repeat;\n    background-position: right bottom;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desktopMainBg});\n  }\n`;\n","import {Field, Form, Formik} from \"formik\";\nimport {\n  Box,\n  Button,\n  Flex, FormControl,\n  Heading,\n  VStack\n} from \"@chakra-ui/react\";\nimport InputField from \"../../components/InputField/InputField\";\nimport authOperations from \"../../redux/auth/authOperations\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {BgImg} from \"./Registration.styled\";\nimport {customColors} from \"../../theme/colors\";\nimport * as Yup from \"yup\";\nimport {authSelectors} from \"../../redux/auth/authSelectors\";\nimport {noop} from \"../../utils/noop\";\nimport DiaryFormValidation from \"../../components/DiaryAddProductForm/DiaryFormValidation/DiaryFormValidation\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('This field is required'),\n  password: Yup.string()\n    .min(5, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required'),\n});\n\nexport default function RegistrationPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const registrationLoading = useSelector(authSelectors.registrationLoading);\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  }\n  const onSubmit = (values) => {\n    const {email, password, name} = values;\n    dispatch(authOperations.register({email, password, username: name}))\n  }\n\n  return (\n    <>\n      <BgImg/>\n      <Flex\n        w={{xs: '100%', md: 'auto'}}\n        justify=\"flex-start\"\n        alignItems={{xs: 'flex-start', lg: 'center'}}\n        flexGrow='1'\n        pt={{xs: '38px', md: '150px'}}\n        pb={{xs: '50px', lg: '25px'}}\n      >\n        <Box\n          flexGrow='1'\n        >\n          <Heading\n            as='h1' size='xs' mb='34px'\n            w={{xs: '100%', md: 'auto'}}\n            textAlign={{xs: 'center', md: 'left'}}\n            color={customColors.sun[\"100\"]}\n            textTransform='uppercase'\n          >Registration</Heading>\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n            {() => (\n              <Form>\n                <VStack spacing={7} align=\"flex-start\" mb={{xs: '60px', lg: '60px'}}>\n\n                  <Field name=\"name\">{({field, form}) => (\n                    <Box w={{xs: '100%', md: '240px'}}>\n                      <FormControl isInvalid={form.errors.email && form.touched.email}>\n                        <InputField\n                          labelName=\"Name *\"\n                          type=\"text\"\n                          name=\"name\"\n                          handlerEvent={noop}\n                          // value={formik.values.name}\n                          required\n                          width=\"100%\"\n                          {...field}\n                        />\n                        <DiaryFormValidation text={form.errors.email}/>\n                      </FormControl>\n                    </Box>\n                  )}\n                  </Field>\n\n                  <Field name=\"email\">{({field, form}) => (\n                    <Box w={{xs: '100%', md: '240px'}}>\n                      <FormControl isInvalid={form.errors.email && form.touched.email}>\n                        <InputField\n                          labelName=\"Email *\"\n                          type=\"text\"\n                          name=\"email\"\n                          handlerEvent={noop}\n                          // value={formik.values.email}\n                          required\n                          width=\"100%\"\n                          {...field}\n                        />\n                        <DiaryFormValidation text={form.errors.email}/>\n                      </FormControl>\n                    </Box>\n                  )}\n                  </Field>\n                  <Field name=\"password\">{({field, form}) => (\n                    <Box w={{xs: '100%', md: '240px'}}>\n                      <FormControl isInvalid={form.errors.email && form.touched.email}>\n                        <InputField\n                          labelName=\"Password *\"\n                          type=\"password\"\n                          name=\"password\"\n                          handlerEvent={noop}\n                          // value={formik.values.password}\n                          required\n                          width=\"100%\"\n                          {...field}\n                        />\n                        <DiaryFormValidation text={form.errors.email}/>\n                      </FormControl>\n                    </Box>\n                  )}\n                  </Field>\n                </VStack>\n                <Flex\n                  gap={6}\n                  flexDirection={{xs: 'column', md: 'row'}}\n                  alignItems={{xs: 'center'}}\n                >\n                  <Button variant={'outline'} type=\"button\" onClick={() => navigate('/login')}>Login</Button>\n                  <Button variant={'primary'} type=\"submit\" isLoading={registrationLoading}>Register</Button>\n                </Flex>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Flex>\n    </>\n  );\n}\n","export const noop = () => {}\n"],"names":["DiaryFormValidation","_ref","text","_jsx","FormErrorMessage","fontSize","m","position","top","xs","md","children","FormLabel","styled","_templateObject","_taggedTemplateLiteral","LabelName","_templateObject2","Input","_templateObject3","InputField","labelName","handlerEvent","width","right","inputSetting","_objectWithoutProperties","_excluded","_Fragment","_jsxs","style","_objectSpread","onChange","placeholder","BgImg","tabletMainBg","desktopMainBg","validationSchema","Yup","shape","name","min","max","required","email","password","RegistrationPage","dispatch","useDispatch","navigate","useNavigate","registrationLoading","useSelector","authSelectors","Flex","w","justify","alignItems","lg","flexGrow","pt","pb","Box","Heading","as","size","mb","textAlign","color","customColors","textTransform","Formik","initialValues","onSubmit","values","authOperations","username","Form","VStack","spacing","align","Field","field","form","FormControl","isInvalid","errors","touched","type","noop","_ref2","_ref3","gap","flexDirection","Button","variant","onClick","isLoading"],"sourceRoot":""}