{"version":3,"file":"static/js/403.e95ec84f.chunk.js","mappings":"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","sources":["components/DiaryAddProductForm/DiaryFormValidation/DiaryFormValidation.jsx","components/InputField/InputField.styled.jsx","components/InputField/InputField.jsx","pages/RegistrationPage/Registration.styled.jsx","pages/RegistrationPage/PasswordStrengthIndicator.js","pages/RegistrationPage/RegistrationPage.jsx","utils/noop.js"],"sourcesContent":["import { FormErrorMessage } from '@chakra-ui/react';\n\nimport React from 'react';\n\nexport default function DiaryFormValidation({ text }) {\n  return (\n    <FormErrorMessage\n      fontSize=\"8px\"\n      m=\"0\"\n      position=\"absolute\"\n      top={{ xs: '50px', md: '70px' }}\n    >\n      {text}\n    </FormErrorMessage>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FormLabel = styled.label`\n  display: block;\n  position: relative;\n  height: 46px;\n\n  &:focus-within span {\n    bottom: 25px;\n    font-size: 12px;\n    color: rgb(220, 220, 220);\n\n    @media screen and (min-width: 768px) {\n      bottom: 32px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 60px;\n  }\n`;\n\nexport const LabelName = styled.span`\n  position: absolute;\n  bottom: 8px;\n\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n\n  transition: bottom 300ms ease, color 300ms ease, font-size 300ms ease;\n  z-index: 10;\n\n  @media screen and (min-width: 768px) {\n    bottom: 20px;\n  }\n`;\n\nexport const Input = styled.input`\n  position: absolute;\n  bottom: 0;\n\n  width: 100%;\n  background: transparent; /* Make input transparent */\n  color: #000; /* Text color for better visibility */\n  letter-spacing: 0.04em;\n\n  border: none;\n  border-bottom: 1px solid #e0e0e0; /* Border only at the bottom */\n\n  transition: border-color 300ms ease;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 5px;\n  }\n\n  &:focus {\n    border-bottom: 1px solid #fc842d;\n    outline: none;\n  }\n\n  &:not(:placeholder-shown) {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &:not(:placeholder-shown) ~ span {\n    bottom: 25px;\n    color: #fc842d;\n    font-size: 12px;\n\n    @media screen and (min-width: 768px) {\n      bottom: 32px;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FormLabel, LabelName, Input } from './InputField.styled';\n\nexport default function InputField({\n  labelName,\n  handlerEvent,\n  width,\n  right,\n  ...inputSetting\n}) {\n  return (\n    <>\n      <FormLabel style={(width = { width })}>\n        <Input onChange={handlerEvent} {...inputSetting} placeholder=\" \" />\n        <LabelName style={{ right: right }}>{labelName}</LabelName>\n      </FormLabel>\n    </>\n  );\n}\n\nInputField.propTypes = {\n  labelName: PropTypes.string,\n  handlerEvent: PropTypes.func.isRequired,\n  width: PropTypes.string,\n  right: PropTypes.number,\n};\n","import styled from '@emotion/styled';\nimport desktopMainBg from '../../assets/bg/desktopMainBg.png';\nimport tabletMainBg from '../../assets/bg/tabletMainBg.png';\n\nexport const BgImg = styled.div`\n  @media screen and (min-width: 768px) {\n    position: fixed;\n    top: 0;\n    right: 0;\n    z-index: -1;\n\n    width: 100vw;\n    height: 100vh;\n\n    background-image: url(${tabletMainBg});\n    background-repeat: no-repeat;\n    background-position: right bottom;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desktopMainBg});\n  }\n`;\n","// PasswordStrengthIndicator.js\n\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\n\nconst PasswordStrengthBar = styled.div`\n  width: 100%;\n  height: 10px;\n  background: #e0e0e0;\n  border-radius: 5px;\n  margin-top: 10px;\n  overflow: hidden;\n`;\n\nconst StrengthIndicator = styled.div`\n  height: 100%;\n  width: ${props => props.strength}%;\n  background: ${props => props.color};\n  transition: width 0.3s ease;\n`;\n\nconst getPasswordStrength = password => {\n  let strength = 0;\n  if (password.length >= 8) strength += 20;\n  if (/[A-Z]/.test(password)) strength += 20;\n  if (/[a-z]/.test(password)) strength += 20;\n  if (/[0-9]/.test(password)) strength += 20;\n  if (/[^A-Za-z0-9]/.test(password)) strength += 20;\n\n  return strength;\n};\n\nconst getStrengthColor = strength => {\n  if (strength < 40) return '#ff4d4d';\n  if (strength < 60) return '#ffcc00';\n  if (strength < 80) return '#66ff66';\n  return '#00cc00';\n};\n\nconst PasswordStrengthIndicator = ({ password }) => {\n  const [strength, setStrength] = useState(0);\n\n  useEffect(() => {\n    const newStrength = getPasswordStrength(password);\n    setStrength(newStrength);\n  }, [password]);\n\n  return (\n    <PasswordStrengthBar>\n      <StrengthIndicator\n        strength={strength}\n        color={getStrengthColor(strength)}\n      />\n    </PasswordStrengthBar>\n  );\n};\n\nexport default PasswordStrengthIndicator;\n","import { Field, Form, Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  Heading,\n  VStack,\n} from '@chakra-ui/react';\nimport InputField from '../../components/InputField/InputField';\nimport authOperations from '../../redux/auth/authOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { BgImg } from './Registration.styled';\nimport { customColors } from '../../theme/colors';\nimport * as Yup from 'yup';\nimport { authSelectors } from '../../redux/auth/authSelectors';\nimport { noop } from '../../utils/noop';\nimport DiaryFormValidation from '../../components/DiaryAddProductForm/DiaryFormValidation/DiaryFormValidation';\nimport PasswordStrengthIndicator from './PasswordStrengthIndicator'; // Adjust the path as needed\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required'),\n  email: Yup.string().email('Invalid email').required('This field is required'),\n  password: Yup.string()\n    .min(5, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required'),\n});\n\nexport default function RegistrationPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const registrationLoading = useSelector(authSelectors.registrationLoading);\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  const onSubmit = values => {\n    const { email, password, name } = values;\n    dispatch(authOperations.register({ email, password, username: name }));\n  };\n\n  return (\n    <>\n      <BgImg />\n      <Flex\n        w={{ xs: '100%', md: 'auto' }}\n        justify=\"flex-start\"\n        alignItems={{ xs: 'flex-start', lg: 'center' }}\n        flexGrow=\"1\"\n        pt={{ xs: '38px', md: '150px' }}\n        pb={{ xs: '50px', lg: '25px' }}\n      >\n        <Box flexGrow=\"1\">\n          <Heading\n            as=\"h1\"\n            size=\"xs\"\n            mb=\"34px\"\n            w={{ xs: '100%', md: 'auto' }}\n            textAlign={{ xs: 'center', md: 'left' }}\n            color={customColors.sun['100']}\n            textTransform=\"uppercase\"\n          >\n            Registration\n          </Heading>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={validationSchema}\n          >\n            {({ values }) => (\n              <Form>\n                <VStack\n                  spacing={7}\n                  align=\"flex-start\"\n                  mb={{ xs: '60px', lg: '60px' }}\n                >\n                  <Field name=\"name\">\n                    {({ field, form }) => (\n                      <Box w={{ xs: '100%', md: '240px' }}>\n                        <FormControl\n                          isInvalid={form.errors.email && form.touched.email}\n                        >\n                          <InputField\n                            labelName=\"Name *\"\n                            type=\"text\"\n                            name=\"name\"\n                            handlerEvent={noop}\n                            // value={formik.values.name}\n                            required\n                            width=\"100%\"\n                            {...field}\n                          />\n                          <DiaryFormValidation text={form.errors.email} />\n                        </FormControl>\n                      </Box>\n                    )}\n                  </Field>\n\n                  <Field name=\"email\">\n                    {({ field, form }) => (\n                      <Box w={{ xs: '100%', md: '240px' }}>\n                        <FormControl\n                          isInvalid={form.errors.email && form.touched.email}\n                        >\n                          <InputField\n                            labelName=\"Email *\"\n                            type=\"text\"\n                            name=\"email\"\n                            handlerEvent={noop}\n                            // value={formik.values.email}\n                            required\n                            width=\"100%\"\n                            {...field}\n                          />\n                          <DiaryFormValidation text={form.errors.email} />\n                        </FormControl>\n                      </Box>\n                    )}\n                  </Field>\n\n                  <Field name=\"password\">\n                    {({ field, form }) => (\n                      <Box w={{ xs: '100%', md: '240px' }}>\n                        <FormControl\n                          isInvalid={\n                            form.errors.password && form.touched.password\n                          }\n                        >\n                          <InputField\n                            labelName=\"Password *\"\n                            type=\"password\"\n                            name=\"password\"\n                            handlerEvent={noop}\n                            // value={formik.values.password}\n                            required\n                            width=\"100%\"\n                            {...field}\n                          />\n                          <PasswordStrengthIndicator password={field.value} />\n                          <DiaryFormValidation text={form.errors.password} />\n                        </FormControl>\n                      </Box>\n                    )}\n                  </Field>\n                </VStack>\n                <Flex\n                  gap={6}\n                  flexDirection={{ xs: 'column', md: 'row' }}\n                  alignItems={{ xs: 'center' }}\n                >\n                  <Button\n                    variant={'outline'}\n                    type=\"button\"\n                    onClick={() => navigate('/login')}\n                  >\n                    Login\n                  </Button>\n                  <Button\n                    variant={'primary'}\n                    type=\"submit\"\n                    isLoading={registrationLoading}\n                  >\n                    Register\n                  </Button>\n                </Flex>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Flex>\n    </>\n  );\n}\n","export const noop = () => {}\n"],"names":["DiaryFormValidation","_ref","text","_jsx","FormErrorMessage","fontSize","m","position","top","xs","md","children","FormLabel","styled","_templateObject","_taggedTemplateLiteral","LabelName","_templateObject2","Input","_templateObject3","InputField","labelName","handlerEvent","width","right","inputSetting","_objectWithoutProperties","_excluded","_Fragment","_jsxs","style","_objectSpread","onChange","placeholder","BgImg","tabletMainBg","desktopMainBg","PasswordStrengthBar","StrengthIndicator","props","strength","color","getStrengthColor","password","_useState","useState","_useState2","_slicedToArray","setStrength","useEffect","newStrength","length","test","getPasswordStrength","validationSchema","Yup","shape","name","min","max","required","email","RegistrationPage","dispatch","useDispatch","navigate","useNavigate","registrationLoading","useSelector","authSelectors","Flex","w","justify","alignItems","lg","flexGrow","pt","pb","Box","Heading","as","size","mb","textAlign","customColors","textTransform","Formik","initialValues","onSubmit","values","authOperations","username","Form","VStack","spacing","align","Field","_ref2","field","form","FormControl","isInvalid","errors","touched","type","noop","_ref3","_ref4","PasswordStrengthIndicator","value","gap","flexDirection","Button","variant","onClick","isLoading"],"sourceRoot":""}